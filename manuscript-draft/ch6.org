#+LATEX_HEADER: \usepackage{graphicx}

* Evaluation
** Introduction
** Initial pilot test
:NOTES:
- Introduction :: Describe methodology used
- Describe results
- Describe comments and feedback
- Verified that it was approachable and basically worked as a NUI application
:END: 
** Exhibition

#+BEGIN_LATEX
\begin{figure}[h]
\centering
\includegraphics[width=1.0\textwidth]{./assets/hm-yellow-red.pdf}
\caption{Heat graph displaying note start points}
\label{fig:note-onset-hm}
\end{figure}
#+END_LATEX

As you can see in the figure \ref{fig:note-onset-hm}, the majority of activity
is in the upper regions of the frequency spectrum and concentrated at the
beginning and the middle of the screen. 


#+BEGIN_LATEX
\begin{figure}[h]
\centering
\includegraphics[width=1.0\textwidth]{./assets/exhibit-cat.png}
\caption{Some exhibit participants managed to draw figurative artwork!}
\label{fig:exhibit-cat}
\end{figure}
#+END_LATEX

#+BEGIN_LATEX
\begin{minted}{python}
import numpy as np
 
def incmatrix(genl1,genl2):
    m = len(genl1)
    n = len(genl2)
    M = None #to become the incidence matrix
    VT = np.zeros((n*m,1), int)  #dummy variable
 
    #compute the bitwise xor matrix
    M1 = bitxormatrix(genl1)
    M2 = np.triu(bitxormatrix(genl2),1) 
 
    for i in range(m-1):
        for j in range(i+1, m):
            [r,c] = np.where(M2 == M1[i,j])
            for k in range(len(r)):
                VT[(i)*n + r[k]] = 1;
                VT[(i)*n + c[k]] = 1;
                VT[(j)*n + r[k]] = 1;
                VT[(j)*n + c[k]] = 1;
 
                if M is None:
                    M = np.copy(VT)
                else:
                    M = np.concatenate((M, VT), 1)
 
                VT = np.zeros((n*m,1), int)
 
    return M
\end{minted}
#+END_LATEX
 
\pagebreak

** Conclusion
