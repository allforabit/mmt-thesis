#+OPTIONS: d:nil
#+PANDOC_OPTIONS: table-of-contents:nil number-sections:t
* My approach
:NOTES:
Purpose: describe how I'm going about it and why. Describe the tools I'm using.
:END:

** Introduction
** Appraisal of options
   :NOTES:
   - Availability
   - Usage style - instrument like (Levin)
   :END:
** Approach - theory
  :NOTES:
  1. HCI considerations, in particular NUI cite:wigdor_brave_2011
  2. The Musical Interface Technology Design Space cite:overholt_musical_2009
  3. Research into cross modal perception (time x axis, pitch y axis) - https://www.researchgate.net/publication/280777718_Shape_drawing_and_gesture_Cross-modal_mappings_of_sound_and_music 
  :END:

*** HCI considerations

**** The natural user interface

NUI is an evolution of the concept of the graphic user interface and refers to
an approach to human computer interaction beyond that of the traditional
keyboard and mouse or what has been termed the WIMP model. It encompasses
a set of guidelines and best practices which are set out most comprehensively by
Wigdor (2014). Some of the basic tenets of NUI are as follows:
- Harness existing skills when possible without necessarily mimicing the real
  world tool or instrument [[cite:wigdor_brave_2011][p.13]].
- Be friendly and learnable by beginners but allow for mastery given enough
  practice (a sentiment shared by Levin, above)
  [[cite:wigdor_brave_2011][p.13]].
- Immediate feedback for all interactions should take place, most usually but
  not limited to, visual feedback. [[cite:wigdor_brave_2011][p.87]]

Furthermore, the interface should take advantage of the particular affordances
offered by the input method. [[cite:wigdor_brave_2011][p.115]] An apt example of
this is the early introduction of digital pens for windows laptops where the pen
wasn't suited to the WIMP interface and failed to receive widespread usage. In
this case, the interface forces the user to carry out awkward gestures for the
medium, including double clicking and right clicking, failing to take advantage
of the stroke gesture much more suited to it.

The system CrossY, referenced in Wigdor (2014), uses a cross gesture stroke to
interact with buttons, menus, and widgets, as well as the painting functionality
cite:apitz_crossy_2004. The CrossY gesture system enables the user to, for
instance, select brush size and colour in one stroke by dragging the pen from
right to left across an icon and validating selection by dragging past the left
or bottom selected leaf icon. This is illustrated clearly in the left-most
diagram of the provided figure (fig. 3).

*** The Musical Interface Technology Design Space (MITDS)
*** Cross modal perception

** Approach - practice
*** Delivery on Web Browser
*** Modern web browser as a delivery platform
 :notes:
 discuss pros and cons and situations where it is likely to be a good option.
 i.e. prototyping where feedback is important. disadvantages performance, can't
 be used with pro audio software such as asio. cite:adenot_web_2017
 :end:

*** Benefits of using tone.js cite:mann_interactive_2015
*** Paper.js for the graphics system
   :notes:
   - scenegraph
   - line smoothing
   - vector system
   :end:
*** FM synthesis :: give a brief overview of fm synthesis and why it was a
                     good choice for the application
*** Live coding workflow
**** [Introduction]
:notes:
- the morphic interface
- mention precedents such as smalltalk squeek
  # - alan kay steve jobs story??? - cite:kay_what_2017 
:end:
**** React.js framework
:notes:
to allow for a declaritive programming model as well
as a live code reloading workflow
:end:
react is a web framework built by facebook that aids the developer in updating
the dom (document object model), a process that is required when the state of
teh applciation changes. this was a role traditionally carrried out on the
server and served to users as a static page. this all changed however with the
rise of single page applications (spa) around the 2???s. the value proposition
of the spa is increased interactivity and responsives to user input, allowing
the look and contents of the page to update dynamically as the user interacst
with the system. to aid in the construction of these spa's a number of
frameworks to help the process were introduced by the open source community.
some popular early examples include /backbone.js/ and /angular.js/. a technique
that saw some popularity was a system called two way binding which created two
way link between the current state in the model and the visual appearance of the
view. this however has a number of issues including some serious performance
issues, in addition to some conceptual problems (???ref). react offers a simpler
one way bidning ssytem using what is termed the virtual dom. in this model a
special virtual version of the dom is constructed and when the model changes is
updated. the parts of the dom that require changing can thusly be pinpointed and
the real dom can be efficiently updated. this system has proven to be
particulalrly beneficial when paired with functional programming techniques, a
style of programming that emphasizes the use of pure functions as the primary
building block of programs. in the case of working with the dom, it can lead to
not only an increase in efficiency in the rendering of the applications but also
a simplification of the programming model. a number of projects have emerged
that attempt to bring this benefits of the react model beyond the realm of the
dom including writing console prgorams (???ref), writing web audio applications
(???ref) and even arduino projects (???ref).

**** Clojurescript
 :notes:
   1. relationship to clojure
   2. benefits of using clojurescript
       1. immutable data structures (binary tree)
       2. functional programming paradigm
       3. live code reloading (particularly when used in conjunction with
         react.js)
 :end:
**** Managing state with re-frame
:notes:
- describe programming model
- it's relationship to frp
:end:
** Conclusion
